#!/bin/bash
#
# This sets the library path to the program's directory. Useful
# for running large programs which depend on shared objects which
# are not where the loader expects to find them.
#

function print-help() {
    echo "usm-lib-helper <name> <version> [command]

Runs the given command with a shared library prefix in
program-directory/lib. Use this if you happen to get
shared library errors when running normally.

If command is empty, this starts a subshell with the correct
library path.

Example:
   #  Note that usm-lib-helper will autocomplete big-program to
   #  big-program--version for you.
   usm-lib-helper big-program current 'big-program some arguments'
"
    exit 1
}

PROGRAM_NAME="$1"
PROGRAM_VERSION="$2"
COMMAND="$3"

if [ "$PROGRAM_NAME" = "" -o "$PROGRAM_VERSION" = "" ]; then
    print-help
fi

if [ "$COMMAND" = "" ]; then
    COMMAND=/bin/bash
fi

if [ ! -d "$HOME/Apps/$PROGRAM_NAME/$PROGRAM_VERSION" ]; then
    echo "Cannot find $PROGRAM_NAME with version $PROGRAM_VERSION"
    exit 2
fi

LD_LIBRARY_PATH="$HOME/Apps/$PROGRAM_NAME/$PROGRAM_VERSION/lib" eval $COMMAND
